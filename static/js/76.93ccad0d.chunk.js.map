{"version":3,"file":"static/js/76.93ccad0d.chunk.js","mappings":"4PAsCA,EAjCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEUC,EAAAA,EAAAA,GAAYtB,EAAS,QAAQ,KAAD,EAA7CkB,EAAQC,EAAAI,KACdhB,EAAQW,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBR,EAAS,2EAAyD,yBAAAQ,EAAAM,OAAA,GAAAR,EAAA,kBAErE,kBAPa,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KASdd,GACF,GAAG,CAACb,IAEAU,GAAckB,EAAAA,EAAAA,KAAA,KAAAC,SAAInB,IACjBJ,EAAKwB,QAGRC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,sBACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGvB,EAAK0B,KAAI,SAAAC,GAAK,OACbL,EAAAA,EAAAA,KAAA,MAAAC,SAAyBI,EAAMC,MAAtBD,EAAME,QAA0B,UAPxBP,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cAY9B,C,qDCpCMO,EAAU,mCACVC,EAAW,+BAEXf,EAAW,eAAAR,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAqB,EAAAtC,EAAAuC,EAAAC,EAAAC,EAAAC,EAAAf,UAAA,OAAAX,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMuC,OANhCiB,EAAKI,EAAAZ,OAAA,QAAAa,IAAAD,EAAA,GAAAA,EAAA,GAAG,GAAI1C,EAAO0C,EAAAZ,OAAA,QAAAa,IAAAD,EAAA,GAAAA,EAAA,GAAG,KAAIvB,EAAAC,KAAA,EAE3CmB,EAAMvC,EAAO,GAAA4C,OACZP,EAAQ,WAAAO,OAAU5C,EAAO,aAAA4C,OAAYR,EAAO,mBAC/CE,EAAK,GAAAM,OACFP,EAAQ,0BAAAO,OAAyBR,EAAO,WAAAQ,OAAUN,EAAK,sBAAAM,OACvDP,EAAQ,gCAAAO,OAA+BR,GAASjB,EAAAE,KAAA,EAEhCwB,MAAMN,GAAK,KAAD,EAAnB,OAARC,EAAQrB,EAAAI,KAAAJ,EAAAE,KAAA,EACKmB,EAASM,OAAO,KAAD,EAAxB,GAAJL,EAAItB,EAAAI,KAELiB,EAASO,GAAG,CAAD5B,EAAAE,KAAA,eACR,IAAI2B,MAAMP,EAAKQ,gBAAkB,0BAAqB,KAAD,UAAA9B,EAAA+B,OAAA,SAGtDlD,EAAUyC,EAAOA,EAAKU,SAAO,QAEW,MAFXhC,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAEpCiC,QAAQ1C,MAAM,yBAAwBS,EAAAK,IAASL,EAAAK,GAAA,yBAAAL,EAAAM,OAAA,GAAAR,EAAA,mBAGlD,kBApBgB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KAsBjB,K","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchMovies from '../../services/api';\nimport './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadCast = async () => {\n      try {\n        const castData = await fetchMovies(movieId, 'cast');\n        setCast(castData);\n      } catch (err) {\n        setError('A apărut o eroare la încărcarea distribuției filmului');\n      }\n    };\n\n    loadCast();\n  }, [movieId]);\n\n  if (error) return <p>{error}</p>;\n  if (!cast.length) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <h2>Distribuție</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.cast_id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '48b9c272a5afb0debc8843cdd7638bc2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (query = '', movieId = null) => {\n  try {\n    const url = movieId\n      ? `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      : query\n      ? `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n      : `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.status_message || 'A apărut o eroare');\n    }\n\n    return movieId ? data : data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport default fetchMovies;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","useEffect","loadCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","fetchMovies","sent","t0","stop","apply","arguments","_jsx","children","length","_jsxs","map","actor","name","cast_id","API_KEY","BASE_URL","query","url","response","data","_args","undefined","concat","fetch","json","ok","Error","status_message","abrupt","results","console"],"sourceRoot":""}