{"version":3,"file":"static/js/888.2f0034ba.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport fetchMovies from '../../services/api';\nimport './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovie = async () => {\n      try {\n        const movieData = await fetchMovies('', movieId);\n        setMovie(movieData);\n      } catch (err) {\n        setError('A apărut o eroare la încărcarea detaliilor filmului');\n      }\n    };\n\n    loadMovie();\n  }, [movieId]);\n\n  if (error) return <p>{error}</p>;\n  if (!movie) return <p>Loading...</p>;\n\n  return (\n    <div className=\"movieDetails\">\n      <h1>{movie.title}</h1>\n      {movie.poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n      ) : (\n        <p>Poster indisponibil</p>\n      )}\n      <p>{movie.overview}</p>\n      <Link to={`cast`}>Distribuție</Link>\n      <Link to={`reviews`}>Recenzii</Link>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '48b9c272a5afb0debc8843cdd7638bc2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (query = '', movieId = null) => {\n  try {\n    const url = movieId\n      ? `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      : query\n      ? `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n      : `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.status_message || 'A apărut o eroare');\n    }\n\n    return movieId ? data : data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport default fetchMovies;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","useEffect","loadMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","fetchMovies","sent","t0","stop","apply","arguments","_jsx","children","_jsxs","className","title","poster_path","src","concat","alt","overview","Link","to","Outlet","API_KEY","BASE_URL","query","url","response","data","_args","length","undefined","fetch","json","ok","Error","status_message","abrupt","results","console"],"sourceRoot":""}